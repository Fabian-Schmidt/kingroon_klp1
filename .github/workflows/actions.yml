name: Create Image

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    # runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        if: runner.arch == 'X64'
        run: |
          sudo apt update
          sudo apt -y install binfmt-support qemu-user-static
          sudo dpkg --add-architecture aarch64

      - name: Free Disk Space Before Build
        if: runner.arch == 'X64'
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/lib/android/sdk/ndk
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo apt-get clean
          sudo apt-get -y autoremove
          sudo apt-get -y autoclean
          echo "Disk space after cleanup:"
          df -h

      - name: Build image
        working-directory: ${{ runner.temp }}
        run: |
          git clone https://github.com/armbian/build.git --depth=1 --branch v25.05 --single-branch
          cd build

          cp -r ${{ github.workspace }}/files/userpatches/ userpatches

          ./compile.sh klp1

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ${{ runner.temp }}/build/output/images
          name: image

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ${{ runner.temp }}/build/output/logs
          name: logs

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ${{ runner.temp }}/build/output/versions
          name: versions

      - name: Publish to release
        working-directory: ${{ runner.temp }}/build/output/
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          gh release edit ${{github.event.release.tag_name}} --notes-file versions
          gh release upload ${{github.event.release.tag_name}} logs/*
          gh release upload ${{github.event.release.tag_name}} images/*
