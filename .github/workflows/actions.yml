on:
  workflow_dispatch:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

run-name: Create Image

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt -y install binfmt-support qemu-user-static
          sudo dpkg --add-architecture aarch64

      - name: Free Disk Space Before Build
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/lib/android/sdk/ndk
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo apt-get clean
          sudo apt-get -y autoremove
          sudo apt-get -y autoclean
          echo "Disk space after cleanup:"
          df -h

      - name: Build image
        run: |
          git clone https://github.com/armbian/build.git --depth=1

          cp -r ./files/userpatches/ build
          cd build

          ./compile.sh  BOARD=mkspi BRANCH=current RELEASE=bookworm BSPFREEZE=yes BUILD_DESKTOP=no BUILD_MINIMAL=no KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=sha,gpg,img KERNEL_GIT=shallow PROGRESS_LOG_TO_FILE=yes PROGRESS_DISPLAY=plain CLEAN_LEVEL=make,debs,make-uboot INCLUDE_HOME_DIR=yes

          LOOP_DEV=$(sudo losetup --partscan --find --show ./output/images/*.img)
          sudo mount "$LOOP_DEV"p2 /mnt
          export KERNEL_VERSION="$(awk '/Kernel:/ {print $2}' /mnt/home/mks/versions)"
          cp /mnt/home/mks/versions ..
          sudo umount /mnt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: build/output/images
          name: image
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: build/output/logs
          name: logs
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: versions
          name: versions
          
      - name: Archiving artifacts
        if: ${{ ! startsWith(github.ref, 'refs/') }}
        run: cd build && zip -r output.zip output/images
      
      - name: Create release
        id: create_release
        if: ${{ ! startsWith(github.ref, 'refs/') }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: versions
          draft: true
          prerelease: false

      - name: Upload files to release
        uses: actions/upload-release-asset@v1
        if: ${{ ! startsWith(github.ref, 'refs/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/output.zip
          asset_name: output.zip
          asset_content_type: application/zip
